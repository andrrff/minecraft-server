# Arquivo YAML para implantar um servidor Minecraft (modo offline) no Kubernetes
# Imagem Docker: itzg/minecraft-server

---
# 1. Namespace
# Cria um namespace dedicado para os recursos do servidor Minecraft.
apiVersion: v1
kind: Namespace
metadata:
  name: minecraft-server-ns # Nome do namespace
spec:
  finalizers:
    - kubernetes

---
# 2. StatefulSet
# Define o StatefulSet para gerenciar o pod do servidor Minecraft.
# StatefulSets sÃ£o ideais para aplicaÃ§Ãµes com estado, como servidores de jogos.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minecraft-server
  namespace: minecraft-server-ns # Implanta no namespace criado acima
  labels:
    app: minecraft-server
spec:
  serviceName: minecraft-service # Nome do Service que gerencia este StatefulSet
  replicas: 1 # Apenas uma rÃ©plica para um servidor Minecraft padrÃ£o
  selector:
    matchLabels:
      app: minecraft-server # Deve corresponder aos labels do template do pod
  template:
    metadata:
      labels:
        app: minecraft-server # Labels aplicados ao pod
    spec:
      hostNetwork: true # Adicionado: usa a rede do host para melhor conectividade
      nodeSelector:
        kubernetes.io/os: linux # Garante que o pod rode em nÃ³s Linux
      containers:
        - name: minecraft-server-container
          image: itzg/minecraft-server:latest # Imagem Docker do servidor Minecraft
          imagePullPolicy: Always
          ports:
            - containerPort: 25565 # Porta padrÃ£o do Minecraft
              name: minecraft-tcp
            - containerPort: 25575 # Porta para RCON
              name: rcon-tcp

          env:
            # ConfiguraÃ§Ãµes Essenciais
            - name: EULA
              value: "TRUE"
            - name: ONLINE_MODE
              value: "false"
            - name: MEMORY
              value: ""
            - name: JVM_XX_OPTS
              value: "-XX:MaxRAMPercentage=75.0"
            - name: TYPE
              value: "FABRIC"
            - name: VERSION
              value: "1.21.5"
              
            # ConfiguraÃ§Ãµes de AFK e ociosidade
            - name: ENABLE_AUTOPAUSE
              value: "true"
            - name: AUTOPAUSE_TIMEOUT_EST
              value: "900" # 15 minutos antes de considerar um jogador como AFK
            - name: AUTOPAUSE_TIMEOUT_INIT
              value: "300" # 5 minutos antes de pausar o servidor apÃ³s o Ãºltimo jogador sair
            - name: AUTOPAUSE_PERIOD
              value: "10" # Intervalo em segundos para verificar jogadores AFK

            # ConfiguraÃ§Ãµes do Jogo (Exemplos)
            - name: SERVER_NAME
              value: "ðŸ”¥Tales of Gozas ServerðŸ”¥"
            - name: MOTD
              value: "Â§6Â§lâœ¨ Bem-vindo ao Â§cÂ§lðŸ”¥Tales of Gozas ServerðŸ”¥Â§r Â§6Â§lâœ¨\nÂ§aÂ§oâ–º VersÃ£o 1.21.5 Fabric Â§e[Modo Offline]"
            - name: WELCOME_MESSAGE
              value: "Â§2Bem-vindo ao servidor, Â§b{PLAYER}Â§2! Esperamos que vocÃª se divirta conosco.\nÂ§6Regras:\nÂ§f- Respeite os outros jogadores\nÂ§f- NÃ£o griefing\nÂ§f- Divirta-se!"
            - name: DIFFICULTY
              value: "normal" # easy, normal, hard, peaceful
            - name: MAX_PLAYERS
              value: "15"
            - name: SPAWN_PROTECTION
              value: "0"
            - name: ALLOW_NETHER
              value: "true"
            - name: ANNOUNCE_PLAYER_ACHIEVEMENTS
              value: "true"
            - name: ENABLE_COMMAND_BLOCK
              value: "false"
            - name: FORCE_GAMEMODE
              value: "false"
            - name: GENERATE_STRUCTURES
              value: "true"
            - name: PVP
              value: "true"
            - name: VIEW_DISTANCE
              value: "18"
            - name: SEED
              value: "7328636133801045505" # Seed do mundo personalizada

            # ConfiguraÃ§Ãµes do RCON (habilitado)
            - name: ENABLE_RCON
              value: "true"
            - name: RCON_PORT
              value: "25575"
            - name: RCON_PASSWORD
              value: "minecraft_secure_password" # Recomendado: use uma senha mais segura

          volumeMounts:
            - name: minecraft-data # Monta o volume persistente
              mountPath: /data # DiretÃ³rio onde os dados do servidor sÃ£o armazenados na imagem
          resources: # RequisiÃ§Ãµes e limites de recursos (ajuste conforme necessÃ¡rio)
            requests:
              memory: "1Gi" # MÃ­nimo de memÃ³ria requisitada
              cpu: "500m"   # MÃ­nimo de CPU requisitada (0.5 core)
            limits:
              memory: "7Gi" # MÃ¡ximo de memÃ³ria permitida
              cpu: "2000m"  # MÃ¡ximo de CPU permitida (2 cores)
          livenessProbe: # Verifica se o container estÃ¡ vivo
            tcpSocket:
              port: 25565
            # initialDelaySeconds: 60 # Espera 60s antes da primeira verificaÃ§Ã£o
            periodSeconds: 30       # Verifica a cada 30s
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: # Verifica se o container estÃ¡ pronto para receber trÃ¡fego
            tcpSocket:
              port: 25565
            # initialDelaySeconds: 90 # Espera 90s (tempo para o servidor iniciar)
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3

  volumeClaimTemplates: # Define o template para o PersistentVolumeClaim
    - metadata:
        name: minecraft-data # Nome do PVC
        namespace: minecraft-server-ns
      spec:
        accessModes: [ "ReadWriteOnce" ] # Permite leitura e escrita por um Ãºnico nÃ³
        resources:
          requests:
            storage: 10Gi # Tamanho do armazenamento (ajuste conforme necessÃ¡rio)
        storageClassName: "microk8s-hostpath" # Corrigido para o nome da storageClass correta

---
# 3. Service
# ExpÃµe o servidor Minecraft para acesso externo usando NodePort.
apiVersion: v1
kind: Service
metadata:
  name: minecraft-service
  namespace: minecraft-server-ns
  labels:
    app: minecraft-server
spec:
  type: NodePort
  externalTrafficPolicy: Local 
  ports:
    - port: 25565
      targetPort: 25565
      nodePort: 32414
      protocol: TCP
      name: minecraft-tcp
    - port: 25575
      targetPort: 25575
      nodePort: 31249
      protocol: TCP
      name: rcon-tcp
  selector:
    app: minecraft-server

---
# 4. PersistentVolumeClaim para armazenar os backups
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minecraft-backup-storage
  namespace: minecraft-server-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi  # Tamanho adequado para armazenar um mÃªs de backups
  storageClassName: "microk8s-hostpath" # Storage class correta para MicroK8s

---
# 5. ConfigMap com script de backup
apiVersion: v1
kind: ConfigMap
metadata:
  name: minecraft-backup-script
  namespace: minecraft-server-ns
data:
  backup.sh: |
    #!/bin/bash
    set -e  # Encerra o script se qualquer comando falhar
    
    # Configura variÃ¡veis
    BACKUP_DIR="/backups"
    SOURCE_DIR="/minecraft-data"
    RETENTION_DAYS=30
    TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
    BACKUP_FILE="$BACKUP_DIR/minecraft-backup-$TIMESTAMP.tar.gz"
    
    # Envia mensagens ao servidor via RCON (se disponÃ­vel)
    if [ -x "$(command -v rcon-cli)" ]; then
      echo "Notificando jogadores sobre o backup..."
      rcon-cli --host localhost --port 25575 --password $RCON_PASSWORD "say Â§e[SISTEMA] Â§6Iniciando backup do servidor... Pode haver alguma lentidÃ£o."
      rcon-cli --host localhost --port 25575 --password $RCON_PASSWORD "save-all"
      rcon-cli --host localhost --port 25575 --password $RCON_PASSWORD "save-off"
      sleep 5
    else
      echo "RCON nÃ£o disponÃ­vel. Continuando sem notificar jogadores."
    fi
    
    # DiretÃ³rios e arquivos para excluir do backup
    echo "Iniciando backup em $(date)"
    echo "Compactando arquivos do servidor..."
    
    # Criar backup com exclusÃµes para arquivos problemÃ¡ticos
    tar -czf "$BACKUP_FILE" \
      --exclude="./logs/*.log.gz" \
      --exclude="./crash-reports" \
      --exclude="./debug" \
      --warning=no-file-changed \
      -C "$SOURCE_DIR" .
    
    BACKUP_STATUS=$?
    
    # Reativa o salvamento (se RCON disponÃ­vel)
    if [ -x "$(command -v rcon-cli)" ]; then
      rcon-cli --host localhost --port 25575 --password $RCON_PASSWORD "save-on"
      rcon-cli --host localhost --port 25575 --password $RCON_PASSWORD "say Â§e[SISTEMA] Â§aBackup concluÃ­do."
    fi
    
    # Verifica se o backup foi bem-sucedido (aceita cÃ³digo 0 ou 1)
    if [ $BACKUP_STATUS -eq 0 ] || [ $BACKUP_STATUS -eq 1 ]; then
      echo "Backup concluÃ­do com sucesso: $BACKUP_FILE"
      echo "Tamanho do backup: $(du -h $BACKUP_FILE | cut -f1)"
    else
      echo "Falha ao criar backup! CÃ³digo de erro: $BACKUP_STATUS"
      exit 1
    fi
    
    # Remove backups mais antigos que o perÃ­odo de retenÃ§Ã£o
    echo "Verificando e removendo backups antigos (mais de $RETENTION_DAYS dias)..."
    find "$BACKUP_DIR" -name "minecraft-backup-*.tar.gz" -type f -mtime +$RETENTION_DAYS -delete
    
    # RelatÃ³rio final de uso de espaÃ§o
    echo "EspaÃ§o total usado por backups: $(du -sh $BACKUP_DIR | cut -f1)"
    echo "Processo de backup finalizado em $(date)."

---
# 6. CronJob para executar o backup automaticamente
apiVersion: batch/v1
kind: CronJob
metadata:
  name: minecraft-backup
  namespace: minecraft-server-ns
spec:
  schedule: "0 */12 * * *"  # A cada 12 horas (Ã s 00:00 e 12:00)
  concurrencyPolicy: Forbid  # NÃ£o permite execuÃ§Ãµes sobrepostas
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup-container
            image: bitnami/minideb:latest  # Imagem leve com ferramentas bÃ¡sicas
            command:
            - /bin/bash
            - /scripts/backup.sh
            volumeMounts:
            - name: minecraft-data-source
              mountPath: /minecraft-data
              readOnly: true  # Acesso somente leitura aos dados do servidor
            - name: backup-storage
              mountPath: /backups
            - name: backup-script
              mountPath: /scripts
          restartPolicy: OnFailure
          volumes:
          - name: minecraft-data-source
            persistentVolumeClaim:
              claimName: minecraft-data-minecraft-server-0  # ReferÃªncia ao PVC criado pelo StatefulSet
          - name: backup-storage
            persistentVolumeClaim:
              claimName: minecraft-backup-storage
          - name: backup-script
            configMap:
              name: minecraft-backup-script
              defaultMode: 0755  # Torna o script executÃ¡vel

